generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
  output          = "../generated/prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model CargosAdmin {
  id           Int            @id @default(autoincrement())
  nombre       String?        @db.VarChar(1000)
  GestionAdmin GestionAdmin[]

  @@map("tb_cargos_admin")
}

model Categoria {
  id     Int     @id @default(autoincrement())
  nombre String? @db.Text

  @@map("tb_categorias")
}

model PersonaClub {
  id               Int         @id @default(autoincrement())
  tipoDocumento    String      @map("tipo_documento") @db.VarChar(10)
  idMunicipio      Int         @map("id_municipio")
  nombres          String      @db.VarChar(5000)
  apellidos        String      @db.VarChar(5000)
  fechaNacimento   DateTime?   @map("fecha_nacimento") @db.Date
  tipoRh           String?     @map("tipo_rh") @db.VarChar(100)
  peso             Float?      @db.Float
  altura           Float?      @db.Float
  correo           String      @db.VarChar(5000)
  numeroTelefono   Int?        @map("numero_telefono")
  tallaCamisa      String?     @map("talla_camisa") @db.VarChar(100)
  tallaCalzado     String?     @map("talla_calzado") @db.VarChar(100)
  tallaPantaloneta String?     @map("talla_pantaloneta") @db.VarChar(100)
  genero           String?     @db.VarChar(200)
  direccion        String?     @db.Text
  entrenador       Entrenador?
  deportista       Deportista?
  usuario          Usuario?

  @@map("tb_personas_club")
}

model ContactosEmergencia {
  id            Int     @id @default(autoincrement())
  tipoDocumento String  @map("tipo_documento") @db.VarChar(10)
  idEntrenador  Int?    @map("id_entrenador")
  nombres       String? @db.VarChar(5000)
  apellidos     String? @db.VarChar(5000)
  correo        String? @db.Text
  telefono      String? @db.Text

  @@map("tb_contactos_emergencia")
}

model Entrenador {
  id                   Int         @id @default(autoincrement())
  idPersonaClub        Int         @unique @map("id_persona_club")
  idContactoEmergencia Int?        @map("id_contacto_emergencia")
  fechaIngreso         DateTime?   @map("fecha_ingreso") @db.Date
  activo               Boolean?
  contrato             Bytes?      @db.Blob
  personaClub          PersonaClub @relation(fields: [idPersonaClub], references: [id])

  @@map("tb_entrenadores")
}

model Tutor {
  id            Int            @id @default(autoincrement())
  tipoDocumento String         @map("tipo_documento") @db.VarChar(10)
  nombres       String?        @db.VarChar(5000)
  apellidos     String?        @db.VarChar(5000)
  correo        String?        @db.Text
  telefono      String?        @db.Text
  deportista    Deportista[]
  GestionAdmin  GestionAdmin[]

  @@map("tb_tutores")
}

model Deportista {
  id                  Int                   @id @default(autoincrement())
  idTutor             Int?                  @map("id_tutor")
  idPersonaClub       Int                   @unique @map("id_persona_club")
  idCategoria         Int?                  @map("id_categoria")
  activo              Boolean?
  personaClub         PersonaClub           @relation(fields: [idPersonaClub], references: [id])
  tutor               Tutor?                @relation(fields: [idTutor], references: [id])
  desercionDeportista DesercionDeportista[]
  GestionAdmin        GestionAdmin[]
  PagoDeportista      PagoDeportista[]

  @@map("tb_deportistas")
}

model Departamento {
  id         Int         @id @default(autoincrement())
  nombre     String?     @db.VarChar(800)
  municipios Municipio[]

  @@map("tb_departamentos")
}

model DesercionDeportista {
  id             Int        @id @default(autoincrement())
  idDeportista   Int        @map("id_deportista")
  fechaDesercion DateTime?  @map("fecha_desercion") @db.Date
  razon          String?
  descripcion    String?
  deportista     Deportista @relation(fields: [idDeportista], references: [id])

  @@map("tb_desercion_deportistas")
}

model GestionAdmin {
  id           Int          @id @default(autoincrement())
  idTutor      Int?         @map("id_tutor")
  idDeportista Int?         @map("id_deportista")
  idCargo      Int?         @map("id_cargo")
  fechaInicio  DateTime?    @map("fecha_inicio") @db.Date
  fechaFin     DateTime?    @map("fecha_fin") @db.Date
  activo       Boolean?
  tutor        Tutor?       @relation(fields: [idTutor], references: [id])
  deportista   Deportista?  @relation(fields: [idDeportista], references: [id])
  cargo        CargosAdmin? @relation(fields: [idCargo], references: [id])

  @@map("tb_gestion_admin")
}

model Municipio {
  id             Int          @id @default(autoincrement())
  idDepartamento Int          @map("id_departamento")
  nombre         String?      @db.VarChar(800)
  estado         Boolean?
  departamento   Departamento @relation(fields: [idDepartamento], references: [id])

  @@map("tb_municipios")
}

model PagoDeportista {
  id           Int        @id @default(autoincrement())
  idDeportista Int
  fechaPago    DateTime?  @map("fecha_pago") @db.Date
  valor        Decimal?   @db.Decimal(10, 2)
  tipoPago     String?    @db.Text
  deportista   Deportista @relation(fields: [idDeportista], references: [id])

  @@map("tb_pagos_deportistas")
}

model TipoDocumento {
  id            Int     @id @default(autoincrement())
  tipoDocumento String? @map("tipo_documento") @db.VarChar(5)
  descripcion   String? @db.VarChar(500)

  @@map("tb_tipo_documentos")
}

model Usuario {
  id          Int          @id @default(autoincrement())
  usuario     String?      @db.VarChar(5000)
  contrasenia String?      @db.VarChar(5000)
  activo      Boolean?
  idPersona   Int?         @unique @map("id_persona")
  persona     PersonaClub? @relation(fields: [idPersona], references: [id])

  @@map("tb_usuarios")
}
